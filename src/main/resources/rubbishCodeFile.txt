/**************************************/
		for orders service class
		
		@Override
	public void run(String... args) throws Exception {

		User user = new User("55", "anas abu hussein", "pic.png", "lala@hotmail.com", "0787526301",
				new Coordinates(54.225, 2.1144));

		List<String> x = new ArrayList<>();
		x.add("salt");
		x.add("meat");

		Dishes dishes = new Dishes("burger", null, "burger.png", x, null);
		dishes.setRestaurantName("jordan Man");

		Set<Dishes> set = new HashSet<>();
		set.add(dishes);

		Orders orders = new Orders(user, set);

		facadeRepositry.getOrdersOfDishesRepo().save(orders);

	}
	
/**************************************/

for (Dishes dishes : restaurant.getDishes()) {
				for (Dishes dishes1 : object.getDishes()) {
					if (dishes.getDishesID() != dishes1.getDishesID() || dishes.getName() != dishes1.getName()
							|| !restaurant.getDishes().contains(dishes1)) {
						dishes1.setRestaurantName(restaurant.getRestName());
						dishes.setDishesID(Generators.timeBasedGenerator().generate());
						facadeService.getDishesService().save(dishes1);
					}

					if (dishes.getDishesID() == dishes1.getDishesID() || dishes.getName() == dishes1.getName()
							|| restaurant.getDishes().contains(dishes1))
						facadeService.getDishesService().update(dishes, dishes.getDishesID());
				}
			}

		}
		
*********************************

for mall service ...

@Override
	public void run(String... args) throws Exception {

		Mall mm = new Mall("anas abu hussein", "amman", "jordan", new Coordinates(35.945, 31.9552 ));
	
		this.save(mm);
	}
	
*********************************
for mall orders service 

@Override
	public void run(String... args) throws Exception {

		List<String> ll = new ArrayList<>();
		ll.add("test1 ");
		ll.add("test1 ");
		ll.add("test1 ");
		ll.add("test1 ");
		MallOrders mo = new MallOrders(
				new User("55", "anas", "pic", "test@me.com", "35454", 0, new Coordinates(35.945, 31.9552)), "anas",
				UUID.fromString("6b6f835b-b0cb-11e8-b8c1-835ac93cfa12"), ll);

		this.save(mo);
	}